---
on:
  workflow_call:
    inputs:
      with-code-coverage:
        description: Determines if code-coverage is generated when running tests.
        type: boolean
        default: false
    secrets:
      AWS_REGION:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_RUNNER_ROLE_NAME:
        required: true
      ADMIN_GITHUB_TOKEN:
        required: true
      CODECOV_TOKEN:

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout.
        uses: actions/checkout@v4

      # - name: Setup private Go dependencies.
      #   run: git config --global url."https://${{ secrets.ADMIN_GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Configure AWS.
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_RUNNER_ROLE_NAME }}
          role-session-name: github-actions
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR.
        uses: aws-actions/amazon-ecr-login@v2

      - name: Test.
        run: |
          img="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/docker/go"
          echo "##[group]Pulling image."
          docker pull "$img"
          echo "##[endgroup]"
          docker run \
            -v "$PWD:/go/src/app" \
            -w "/go/src/app" \
            -e CI \
            "$img" \
            sh -c "make test ${{ inputs.with-code-coverage && 'code-coverage' || '' }}"

      - name: Upload code-coverage to codecov.
        if: inputs.with-code-coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
